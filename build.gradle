plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.moa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	configureEach {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// querydsl 의존성
	implementation "com.querydsl:querydsl-core:5.1.0"
	implementation "com.querydsl:querydsl-jpa:5.1.0:jakarta"

	annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'jakarta.persistence:jakarta.persistence-api'
//	testImplementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'

	// Swagger 의존성
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8"

	implementation "org.apache.httpcomponents.client5:httpclient5:5.4.4"

	implementation 'com.navercorp.lucy:lucy-xss:1.6.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL Q파일 생성용
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(querydslDir)
}

compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
}