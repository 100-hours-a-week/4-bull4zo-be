name: SpringBoot CI/CD with GitOps

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout Backend Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Make Gradle Executable
        run: chmod +x gradlew

      - name: Extract Version from build.gradle
        id: version
        if: github.ref_name == 'main'
        run: |
          VERSION=$(grep '^version' build.gradle | awk -F"'" '{print $2}')
          echo "version=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag (main only)
        if: github.ref_name == 'main'
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          TAG=${{ steps.version.outputs.version }}
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}
          git fetch --tags
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1; then
            echo "✅ Tag $TAG already exists"
          else
            git config user.name "GitHub Actions"
            git config user.email "github-actions@users.noreply.github.com"
            git tag $TAG
            git push origin $TAG
            echo "✅ Created Git tag: $TAG"
          fi

      - name: Build JAR (skip tests)
        run: ./gradlew clean build -x test

      - name: Docker Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Set Image Name and Tag
        id: tagger
        run: |
          REF_NAME=${{ github.ref_name }}
          COMMIT_SHA=${{ github.sha }}

          # 기본값
          IMAGE_NAME=4moa/moa-be
          TAG=$(echo "$COMMIT_SHA" | cut -c1-7)

          # main 브랜치인 경우 별도 태그 적용
          if [[ "$REF_NAME" == "main" ]]; then
            IMAGE_NAME=4moa/moa-be
            TAG=${{ steps.version.outputs.version }}
          fi

          echo "image_name=$IMAGE_NAME"
          echo "tag=$TAG"

          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Docker Build & Push
        run: |
          DOCKERFILE=Dockerfile

          docker buildx build \
            --platform linux/amd64 \
            -f $DOCKERFILE \
            -t ${{ steps.tagger.outputs.image_name }}:${{ steps.tagger.outputs.tag }} \
            --push .

      # - name: Checkout EKS GitOps Repo
      #   uses: actions/checkout@v3
      #   with:
      #     repository: 100-hours-a-week/4-bull4zo-eks
      #     token: ${{ secrets.GH_PAT }}
      #     path: eks-repo

      # - name: Update deployment.yaml image tag
      #   run: |
      #     TAG=${{ steps.tagger.outputs.tag }}
      #     DEPLOY_PATH="eks-repo/backend/deployment.yml"
      #     sed -i "s|\(image: 4moa/moa-be:\).*|\1$TAG|" "$DEPLOY_PATH"
      #     echo "✅ Updated image tag to $TAG"
      #     grep "image:" "$DEPLOY_PATH" || echo "image tag not found"

      # - name: Commit and Push updated manifest
      #   run: |
      #     cd eks-repo
      #     git config user.name "GitHub Actions"
      #     git config user.email "actions@github.com"
      #     git add .
      #     git commit -m "test: update backend image tag to ${{ steps.tagger.outputs.tag }}"
      #     git push

      - name: SSH into Bastion and update deployment tag
        env:
          SSH_KEY: ${{ secrets.GCP_CICD_SSH_KEY }}
          BASTION_HOST: ${{ secrets.BASTION_HOST }}
          DEPLOY_FILE: /home/ubuntu/4-bull4zo-eks/backend/deployment.yml
          IMAGE_TAG: ${{ steps.tagger.outputs.tag }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem

          # optional: trust host
          mkdir -p ~/.ssh
          ssh-keyscan -H $BASTION_HOST >> ~/.ssh/known_hosts

          ssh -i key.pem ubuntu@$BASTION_HOST << EOF
            echo "Connected to Bastion"

            cd /home/ubuntu/4-bull4zo-eks/backend
            git pull origin main
            sed -i "s|\(image: 4moa/moa-be:\).*|\1$IMAGE_TAG|" $DEPLOY_FILE

            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add $DEPLOY_FILE
            git commit -m "cicd: update image tag to $IMAGE_TAG"
            git push origin main
          EOF

          rm key.pem
